/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type UserStatus = "active" | "disabled" | "invited";

export interface Account {
  /**
   * The access token of the account. Returned by the provider
   */
  accessToken: string | null;
  /**
   * The time when the access token expires
   */
  accessTokenExpiresAt: Timestamp | null;
  /**
   * The id of the account as provided by the SSO or equal to user_id for credential accounts
   */
  accountId: string;
  /**
   * The time when the account was created
   */
  createdAt: Generated<Timestamp | null>;
  /**
   * Unique identifier for each account
   */
  id: Generated<string>;
  /**
   * The id token returned from the provider
   */
  idToken: string | null;
  /**
   * The password of the account. Mainly used for email and password authentication
   */
  password: string | null;
  /**
   * The id of the provider
   */
  providerId: string;
  /**
   * The refresh token of the account. Returned by the provider
   */
  refreshToken: string | null;
  /**
   * The time when the refresh token expires
   */
  refreshTokenExpiresAt: Timestamp | null;
  /**
   * The scope of the account. Returned by the provider
   */
  scope: string | null;
  /**
   * The time when the account was last updated
   */
  updatedAt: Generated<Timestamp | null>;
  /**
   * The id of the user
   */
  userId: string;
}

export interface ConsultationChat {
  consultationId: string;
  contextData: Json | null;
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  messageContent: string;
  messageRole: string;
  modelUsed: string | null;
  tokensUsed: number | null;
}

export interface Consultation {
  budgetRange: string | null;
  completedAt: Timestamp | null;
  completionPercentage: Generated<number | null>;
  createdAt: Generated<Timestamp>;
  createdBy: string | null;
  department: string | null;
  email: string;
  grantFundingStatus: string | null;
  id: Generated<string>;
  institution: string;
  objectives: string | null;
  phone: string | null;
  piName: string;
  projectDescription: string;
  projectTitle: string;
  researchArea: string | null;
  status: Generated<string | null>;
  timeline: string | null;
  updatedAt: Generated<Timestamp>;
}

export interface CostEstimate {
  analysisCost: Numeric | null;
  approvedAt: Timestamp | null;
  approvedBy: string | null;
  consultationId: string;
  costNotes: string | null;
  createdAt: Generated<Timestamp>;
  discountAmount: Generated<Numeric | null>;
  discountPercentage: Generated<Numeric | null>;
  id: Generated<string>;
  libraryPrepCost: Numeric | null;
  quoteNumber: string | null;
  sequencingCost: Numeric | null;
  serviceCosts: Json;
  storageCost: Numeric | null;
  subtotal: Numeric;
  taxAmount: Generated<Numeric | null>;
  totalCost: Numeric;
  updatedAt: Generated<Timestamp>;
  validUntil: Timestamp | null;
}

export interface Credential {
  /**
   * The time when the credential was created
   */
  createdAt: Generated<Timestamp | null>;
  /**
   * The email associated with this credential
   */
  email: string | null;
  /**
   * Unique identifier for each credential
   */
  id: Generated<string>;
  /**
   * A user-friendly label for this credential
   */
  label: string | null;
  /**
   * Whether this is the primary credential for the user
   */
  primary: boolean | null;
  /**
   * The authentication provider name
   */
  provider: string;
  /**
   * The account id from the provider
   */
  providerAccountId: string | null;
  /**
   * JSON object containing provider tokens
   */
  tokens: Json;
  /**
   * The time when the credential was last updated
   */
  updatedAt: Generated<Timestamp | null>;
  /**
   * The id of the user who owns this credential
   */
  userId: string;
}

export interface ProjectDeliverable {
  actualDeliveryDate: Timestamp | null;
  consultationId: string;
  createdAt: Generated<Timestamp>;
  deliverableType: string;
  dependencies: string[] | null;
  description: string;
  estimatedDeliveryDate: Timestamp | null;
  id: Generated<string>;
  milestoneOrder: number;
  notes: string | null;
  status: Generated<string | null>;
  updatedAt: Generated<Timestamp>;
}

export interface SampleSpecification {
  biologicalReplicates: number | null;
  biosafetyLevel: string | null;
  cellType: string | null;
  concentrationRequirements: string | null;
  consultationId: string;
  controlGroups: string[] | null;
  createdAt: Generated<Timestamp>;
  currentStorage: string | null;
  expectedQuantity: string | null;
  hazardousMaterials: Generated<boolean | null>;
  id: Generated<string>;
  numberOfSamples: number;
  organism: string;
  qualityMetricsRequired: string[] | null;
  sampleType: string;
  specialHandling: string | null;
  storageDuration: string | null;
  strainOrGenotype: string | null;
  technicalReplicates: number | null;
  tissueType: string | null;
  treatmentGroups: string[] | null;
  updatedAt: Generated<Timestamp>;
}

export interface SequencingService {
  basePricePerSample: Numeric | null;
  category: string;
  createdAt: Generated<Timestamp>;
  deliverables: string[] | null;
  description: string;
  id: Generated<string>;
  isActive: Generated<boolean | null>;
  keyFeatures: string[] | null;
  libraryPrepIncluded: Generated<boolean | null>;
  platform: string | null;
  readLength: string | null;
  sampleRequirements: Json;
  serviceCode: string;
  serviceName: string;
  typicalApplications: string[] | null;
  typicalCoverage: string | null;
  typicalTurnaroundDays: number;
  updatedAt: Generated<Timestamp>;
  volumeDiscounts: Json | null;
}

export interface ServiceRecommendation {
  acceptedByUser: boolean | null;
  aiConfidenceScore: Numeric;
  alternatives: string[] | null;
  consultationId: string;
  estimatedCost: Numeric | null;
  estimatedSamples: number | null;
  id: Generated<string>;
  priority: string;
  recommendationReason: string;
  recommendedAt: Generated<Timestamp>;
  serviceId: string;
  specialConsiderations: string | null;
  userFeedback: string | null;
}

export interface Session {
  /**
   * The time when the session was created
   */
  createdAt: Generated<Timestamp | null>;
  /**
   * The time when the session expires
   */
  expiresAt: Timestamp;
  /**
   * Unique identifier for each session
   */
  id: Generated<string>;
  /**
   * The IP address of the device
   */
  ipAddress: string | null;
  /**
   * The unique session token
   */
  token: string;
  /**
   * The time when the session was last updated
   */
  updatedAt: Generated<Timestamp | null>;
  /**
   * The user agent information of the device
   */
  userAgent: string | null;
  /**
   * The id of the user
   */
  userId: string;
}

export interface User {
  /**
   * The time when the user was created
   */
  createdAt: Generated<Timestamp | null>;
  /**
   * The email address of the user
   */
  email: string | null;
  /**
   * Whether the user email is verified
   */
  emailVerified: Generated<boolean>;
  /**
   * Unique identifier for each user
   */
  id: Generated<string>;
  /**
   * The image URL of the user
   */
  image: string | null;
  /**
   * The time when the user last interacted with the system
   */
  lastInteractionAt: Timestamp | null;
  /**
   * The display name of the user
   */
  name: string | null;
  /**
   * The current status of the user account
   */
  status: Generated<UserStatus>;
  /**
   * The user preferred timezone
   */
  timeZone: string | null;
  /**
   * The time when the user was last updated
   */
  updatedAt: Generated<Timestamp | null>;
}

export interface Verification {
  /**
   * The time when the verification was created
   */
  createdAt: Generated<Timestamp | null>;
  /**
   * The time when the verification request expires
   */
  expiresAt: Timestamp;
  /**
   * Unique identifier for each verification
   */
  id: Generated<string>;
  /**
   * The identifier for the verification request
   */
  identifier: string;
  /**
   * The time when the verification was last updated
   */
  updatedAt: Generated<Timestamp | null>;
  /**
   * The value to be verified
   */
  value: string;
}

export interface DB {
  accounts: Account;
  consultationChats: ConsultationChat;
  consultations: Consultation;
  costEstimates: CostEstimate;
  credentials: Credential;
  projectDeliverables: ProjectDeliverable;
  sampleSpecifications: SampleSpecification;
  sequencingServices: SequencingService;
  serviceRecommendations: ServiceRecommendation;
  sessions: Session;
  users: User;
  verifications: Verification;
}
